language: python
# use container-based infrastructure
sudo: required
services:
  - docker
cache:
  pip: true
  directories:
   - test/data/nidmresults-examples
  timeout: 1000
python:
  - "3.5"
bundler_args: --retry 9
# command to install dependencies, e.g. pip install -r requirements.txt --use-mirrors
install: 
 - pip install --upgrade setuptools
  # Install nidmresults from source in GitHub repo
 - pip install --upgrade --no-deps git+https://github.com/cmaumet/nidmresults.git
 - pip install -r requirements.txt
 - cd test/data/nidmresults-examples
 - ls
 # Is this is not a git repo them clone nidmresults-examples
 - if ! [ -d .git ]; then git lfs clone https://github.com/incf-nidash/nidmresults-examples.git .; fi
 - ls
 - git pull
 - ls
 - cd ../../..
script:  
# Run octave
- python TestSPMResultDataModel.py
- cat debug.log
before_install: 
 - git config --global user.name "TravisCI"
 - git config --global user.email "travis@dummy.com"
 # Install SPM12
 - git clone https://github.com/spm/spm12.git
 # Octave dev tools (mkoctfile) required to compile MEX files
 - sudo apt-get install liboctave-dev
 # Compile SPM MEX files for octave
 - cd spm12/src
 - make PLATFORM=octave && make install PLATFORM=octave
 - cd ../..
 - pwd
 - ls
 # Run docker snapshot of dev octave (until 4.4 is released)
 - did=$(docker run -it -d --rm -v `pwd`/spm12/:/spm12 -v `pwd`/incf-nidash/nidmresults-spm/:/nidmresults-spm mtmiller/octave-snapshot)
 # Run tests in Octave
 - docker exec -it $did octave --eval "addpath('/spm12'); ls('/nidmresults-spm'); addpath('/nidmresults-spm/exporter'); addpath('/nidmresults-spm'); disp(spm('version')); nidm_export_all('/nidmresults-spm/test/data/nidmresults-examples/', './spmexport')"
